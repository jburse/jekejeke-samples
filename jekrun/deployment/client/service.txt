<%@page session="false"%><%@page contentType="text/plain; charset=UTF-8"%>
<%--
 % Warranty & Liability
 % To the extent permitted by applicable law and unless explicitly
 % otherwise agreed upon, XLOG Technologies GmbH makes no warranties
 % regarding the provided information. XLOG Technologies GmbH assumes
 % no liability that any problems might be solved with the information
 % provided by XLOG Technologies GmbH.
 %
 % Rights & License
 % All industrial property rights regarding the information - copyright
 % and patent rights in particular - are the sole property of XLOG
 % Technologies GmbH. If the company was not the originator of some
 % excerpts, XLOG Technologies GmbH has at least obtained the right to
 % reproduce, change and translate the information.
 %
 % Reproduction is restricted to the whole unaltered document.
 % Reproduction of the information is only allowed for non-commercial
 % uses. Selling, giving away or letting of the execution of the
 % library is prohibited. The library can be distributed as part of
 % your applications and libraries for execution provided this comment
 % remains unchanged.
 %
 % Trademarks
 % Jekejeke is a registered trademark of XLOG Technologies GmbH.
 %                                                                      --%>
<%
    request.setCharacterEncoding("UTF-8");
    String method = request.getMethod();
    if ("HEAD".equals(method))
        return;
    String firstname = request.getParameter("firstname");
    String name = request.getParameter("name");
    String agefrom = request.getParameter("agefrom");
    String ageto = request.getParameter("ageto");
    String salaryfrom = request.getParameter("salaryfrom");
    String salaryto = request.getParameter("salaryto");
    try {
        servlet.Data.initKnowledgebase();
        jekpro.tools.call.Interpreter inter = servlet.Data.know.iterable();

        terminal.Query query = new terminal.Query(inter);
        query.setFirstname(firstname);
        query.setName(name);
        query.setAgeFrom(agefrom);
        query.setAgeTo(ageto);
        query.setSalaryFrom(salaryfrom);
        query.setSalaryTo(salaryto);

        jekpro.tools.term.TermVar[] vars = query.makeVars();
        Object queryTerm = query.makeQuery(vars);
        query.listRows(vars, queryTerm );
        Object[][] rows = query.getRows();
        for (int j = 0; j < rows.length; j++) {
            Object[] args = rows[j];
%><%=new jekpro.tools.term.TermCompound("employee", args).toString(
        jekpro.tools.call.Interpreter.FLAG_QUOTED)%>.
<%
        }
    } catch (Exception x) {
%><%=new jekpro.tools.term.TermCompound("exception", x.toString()).toString(
        jekpro.tools.call.Interpreter.FLAG_QUOTED)%>.
<%
    }
%>